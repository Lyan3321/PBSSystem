<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="pbs.business.dao.mapper.PbsWechatOrderMapper" >
  <resultMap id="BaseResultMap" type="pbs.business.pojo.po.PbsWechatOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="BIGINT" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
    <result column="bike_id" property="bikeId" jdbcType="VARCHAR" />
    <result column="Start_rent" property="startRent" jdbcType="INTEGER" />
    <result column="End_rent" property="endRent" jdbcType="INTEGER" />
    <result column="Start_node" property="startNode" jdbcType="INTEGER" />
    <result column="End_node" property="endNode" jdbcType="INTEGER" />
    <result column="Start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="End_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="total_time" property="totalTime" jdbcType="INTEGER" />
    <result column="Money" property="money" jdbcType="REAL" />
    <result column="State" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_id, openid, bike_id, Start_rent, End_rent, Start_node, End_node, Start_time, 
    End_time, total_time, Money, State
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="pbs.business.pojo.po.PbsWechatOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pbs_wechat_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pbs_wechat_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pbs_wechat_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="pbs.business.pojo.po.PbsWechatOrderExample" >
    delete from pbs_wechat_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pbs.business.pojo.po.PbsWechatOrder" >
    insert into pbs_wechat_order (id, order_id, openid, 
      bike_id, Start_rent, End_rent, 
      Start_node, End_node, Start_time, 
      End_time, total_time, Money, 
      State)
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=BIGINT}, #{openid,jdbcType=VARCHAR}, 
      #{bikeId,jdbcType=VARCHAR}, #{startRent,jdbcType=INTEGER}, #{endRent,jdbcType=INTEGER}, 
      #{startNode,jdbcType=INTEGER}, #{endNode,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{totalTime,jdbcType=INTEGER}, #{money,jdbcType=REAL}, 
      #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="pbs.business.pojo.po.PbsWechatOrder" >
    insert into pbs_wechat_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="openid != null" >
        openid,
      </if>
      <if test="bikeId != null" >
        bike_id,
      </if>
      <if test="startRent != null" >
        Start_rent,
      </if>
      <if test="endRent != null" >
        End_rent,
      </if>
      <if test="startNode != null" >
        Start_node,
      </if>
      <if test="endNode != null" >
        End_node,
      </if>
      <if test="startTime != null" >
        Start_time,
      </if>
      <if test="endTime != null" >
        End_time,
      </if>
      <if test="totalTime != null" >
        total_time,
      </if>
      <if test="money != null" >
        Money,
      </if>
      <if test="state != null" >
        State,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="bikeId != null" >
        #{bikeId,jdbcType=VARCHAR},
      </if>
      <if test="startRent != null" >
        #{startRent,jdbcType=INTEGER},
      </if>
      <if test="endRent != null" >
        #{endRent,jdbcType=INTEGER},
      </if>
      <if test="startNode != null" >
        #{startNode,jdbcType=INTEGER},
      </if>
      <if test="endNode != null" >
        #{endNode,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalTime != null" >
        #{totalTime,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        #{money,jdbcType=REAL},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pbs.business.pojo.po.PbsWechatOrderExample" resultType="java.lang.Integer" >
    select count(*) from pbs_wechat_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update pbs_wechat_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.openid != null" >
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.bikeId != null" >
        bike_id = #{record.bikeId,jdbcType=VARCHAR},
      </if>
      <if test="record.startRent != null" >
        Start_rent = #{record.startRent,jdbcType=INTEGER},
      </if>
      <if test="record.endRent != null" >
        End_rent = #{record.endRent,jdbcType=INTEGER},
      </if>
      <if test="record.startNode != null" >
        Start_node = #{record.startNode,jdbcType=INTEGER},
      </if>
      <if test="record.endNode != null" >
        End_node = #{record.endNode,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null" >
        Start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        End_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.totalTime != null" >
        total_time = #{record.totalTime,jdbcType=INTEGER},
      </if>
      <if test="record.money != null" >
        Money = #{record.money,jdbcType=REAL},
      </if>
      <if test="record.state != null" >
        State = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update pbs_wechat_order
    set id = #{record.id,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=BIGINT},
      openid = #{record.openid,jdbcType=VARCHAR},
      bike_id = #{record.bikeId,jdbcType=VARCHAR},
      Start_rent = #{record.startRent,jdbcType=INTEGER},
      End_rent = #{record.endRent,jdbcType=INTEGER},
      Start_node = #{record.startNode,jdbcType=INTEGER},
      End_node = #{record.endNode,jdbcType=INTEGER},
      Start_time = #{record.startTime,jdbcType=TIMESTAMP},
      End_time = #{record.endTime,jdbcType=TIMESTAMP},
      total_time = #{record.totalTime,jdbcType=INTEGER},
      Money = #{record.money,jdbcType=REAL},
      State = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pbs.business.pojo.po.PbsWechatOrder" >
    update pbs_wechat_order
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="openid != null" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="bikeId != null" >
        bike_id = #{bikeId,jdbcType=VARCHAR},
      </if>
      <if test="startRent != null" >
        Start_rent = #{startRent,jdbcType=INTEGER},
      </if>
      <if test="endRent != null" >
        End_rent = #{endRent,jdbcType=INTEGER},
      </if>
      <if test="startNode != null" >
        Start_node = #{startNode,jdbcType=INTEGER},
      </if>
      <if test="endNode != null" >
        End_node = #{endNode,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        Start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        End_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalTime != null" >
        total_time = #{totalTime,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        Money = #{money,jdbcType=REAL},
      </if>
      <if test="state != null" >
        State = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pbs.business.pojo.po.PbsWechatOrder" >
    update pbs_wechat_order
    set order_id = #{orderId,jdbcType=BIGINT},
      openid = #{openid,jdbcType=VARCHAR},
      bike_id = #{bikeId,jdbcType=VARCHAR},
      Start_rent = #{startRent,jdbcType=INTEGER},
      End_rent = #{endRent,jdbcType=INTEGER},
      Start_node = #{startNode,jdbcType=INTEGER},
      End_node = #{endNode,jdbcType=INTEGER},
      Start_time = #{startTime,jdbcType=TIMESTAMP},
      End_time = #{endTime,jdbcType=TIMESTAMP},
      total_time = #{totalTime,jdbcType=INTEGER},
      Money = #{money,jdbcType=REAL},
      State = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>