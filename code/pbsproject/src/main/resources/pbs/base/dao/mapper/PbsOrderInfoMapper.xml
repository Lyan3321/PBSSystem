<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="pbs.base.dao.mapper.PbsOrderInfoMapper" >
  <resultMap id="BaseResultMap" type="pbs.base.pojo.po.PbsOrderInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_bm" property="orderBm" jdbcType="VARCHAR" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
    <result column="bike_bm" property="bikeBm" jdbcType="VARCHAR" />
    <result column="node_bm_start" property="nodeBmStart" jdbcType="VARCHAR" />
    <result column="node_bm_end" property="nodeBmEnd" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_bm, openid, bike_bm, node_bm_start, node_bm_end, type, state, start_time, 
    end_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="pbs.base.pojo.po.PbsOrderInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pbs_order_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pbs_order_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pbs_order_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="pbs.base.pojo.po.PbsOrderInfoExample" >
    delete from pbs_order_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pbs.base.pojo.po.PbsOrderInfo" >
    insert into pbs_order_info (id, order_bm, openid, 
      bike_bm, node_bm_start, node_bm_end, 
      type, state, start_time, 
      end_time)
    values (#{id,jdbcType=INTEGER}, #{orderBm,jdbcType=VARCHAR}, #{openid,jdbcType=VARCHAR}, 
      #{bikeBm,jdbcType=VARCHAR}, #{nodeBmStart,jdbcType=VARCHAR}, #{nodeBmEnd,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="pbs.base.pojo.po.PbsOrderInfo" >
    insert into pbs_order_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderBm != null" >
        order_bm,
      </if>
      <if test="openid != null" >
        openid,
      </if>
      <if test="bikeBm != null" >
        bike_bm,
      </if>
      <if test="nodeBmStart != null" >
        node_bm_start,
      </if>
      <if test="nodeBmEnd != null" >
        node_bm_end,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderBm != null" >
        #{orderBm,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="bikeBm != null" >
        #{bikeBm,jdbcType=VARCHAR},
      </if>
      <if test="nodeBmStart != null" >
        #{nodeBmStart,jdbcType=VARCHAR},
      </if>
      <if test="nodeBmEnd != null" >
        #{nodeBmEnd,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pbs.base.pojo.po.PbsOrderInfoExample" resultType="java.lang.Integer" >
    select count(*) from pbs_order_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update pbs_order_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderBm != null" >
        order_bm = #{record.orderBm,jdbcType=VARCHAR},
      </if>
      <if test="record.openid != null" >
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.bikeBm != null" >
        bike_bm = #{record.bikeBm,jdbcType=VARCHAR},
      </if>
      <if test="record.nodeBmStart != null" >
        node_bm_start = #{record.nodeBmStart,jdbcType=VARCHAR},
      </if>
      <if test="record.nodeBmEnd != null" >
        node_bm_end = #{record.nodeBmEnd,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update pbs_order_info
    set id = #{record.id,jdbcType=INTEGER},
      order_bm = #{record.orderBm,jdbcType=VARCHAR},
      openid = #{record.openid,jdbcType=VARCHAR},
      bike_bm = #{record.bikeBm,jdbcType=VARCHAR},
      node_bm_start = #{record.nodeBmStart,jdbcType=VARCHAR},
      node_bm_end = #{record.nodeBmEnd,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pbs.base.pojo.po.PbsOrderInfo" >
    update pbs_order_info
    <set >
      <if test="orderBm != null" >
        order_bm = #{orderBm,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="bikeBm != null" >
        bike_bm = #{bikeBm,jdbcType=VARCHAR},
      </if>
      <if test="nodeBmStart != null" >
        node_bm_start = #{nodeBmStart,jdbcType=VARCHAR},
      </if>
      <if test="nodeBmEnd != null" >
        node_bm_end = #{nodeBmEnd,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pbs.base.pojo.po.PbsOrderInfo" >
    update pbs_order_info
    set order_bm = #{orderBm,jdbcType=VARCHAR},
      openid = #{openid,jdbcType=VARCHAR},
      bike_bm = #{bikeBm,jdbcType=VARCHAR},
      node_bm_start = #{nodeBmStart,jdbcType=VARCHAR},
      node_bm_end = #{nodeBmEnd,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>